package tfg.app.controller;

import java.awt.Color;
import java.awt.Component;
import java.io.File;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import java.util.concurrent.ThreadLocalRandom;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

import org.apache.commons.io.FilenameUtils;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;
import tfg.app.model.entities.FundDesc;
import tfg.app.model.entities.FundPort;
import tfg.app.model.entities.FundVl;
import tfg.app.model.entities.PortOp;
import tfg.app.model.service.FundService;
import tfg.app.model.service.FundServiceImpl;
import tfg.app.util.exceptions.InputValidationException;
import tfg.app.util.exceptions.InstanceNotFoundException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author angel
 */
@SuppressWarnings({ "unchecked", "rawtypes", "serial" })
public class Gui extends javax.swing.JFrame {

	/**
	 * Creates new form Pruebas
	 */
	public Gui() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		ventaBoton = new javax.swing.JRadioButton();
		compraBoton = new javax.swing.JRadioButton();
		buttonGroup1 = new javax.swing.ButtonGroup();
		panelGraficas = new javax.swing.JPanel();
		verVl = new javax.swing.JMenuItem();
		anadirFondo = new javax.swing.JDialog();
		isinLabel = new javax.swing.JLabel();
		isinText = new javax.swing.JTextField();
		gestoraText = new javax.swing.JTextField();
		tipoText = new javax.swing.JTextField();
		categoriaText = new javax.swing.JTextField();
		divisaText = new javax.swing.JTextField();
		gestoraLabel = new javax.swing.JLabel();
		tipoLabel = new javax.swing.JLabel();
		categoriaLabel = new javax.swing.JLabel();
		divisaLabel = new javax.swing.JLabel();
		apComLabel = new javax.swing.JLabel();
		cancelComLabel = new javax.swing.JLabel();
		canAnaFondoBoton = new javax.swing.JButton();
		anadFondoBoton = new javax.swing.JButton();
		cancelComText = new javax.swing.JFormattedTextField();
		apComText = new javax.swing.JFormattedTextField();
		actuaFondo = new javax.swing.JDialog();
		isinLabel1 = new javax.swing.JLabel();
		gestoraText1 = new javax.swing.JTextField();
		tipoText1 = new javax.swing.JTextField();
		categoriaText1 = new javax.swing.JTextField();
		divisaText1 = new javax.swing.JTextField();
		gestoraLabel1 = new javax.swing.JLabel();
		tipoLabel1 = new javax.swing.JLabel();
		categoriaLabel1 = new javax.swing.JLabel();
		divisaLabel1 = new javax.swing.JLabel();
		apComLabel1 = new javax.swing.JLabel();
		cancelComLabel1 = new javax.swing.JLabel();
		canActuaFondoBoton1 = new javax.swing.JButton();
		actuaFondoBoton1 = new javax.swing.JButton();
		cancelComText1 = new javax.swing.JFormattedTextField();
		apComText1 = new javax.swing.JFormattedTextField();
		anadirCartera = new javax.swing.JDialog();
		nomCarteraLabel = new javax.swing.JLabel();
		nomCarteraText = new javax.swing.JTextField();
		descCarteraLabel = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		descCarteraText = new javax.swing.JTextArea();
		canAnaCarteraBoton = new javax.swing.JButton();
		anaCarteraBoton = new javax.swing.JButton();
		actuaCartera = new javax.swing.JDialog();
		nomCarteraLabel1 = new javax.swing.JLabel();
		nomCarteraText1 = new javax.swing.JTextField();
		descCarteraLabel1 = new javax.swing.JLabel();
		jScrollPane5 = new javax.swing.JScrollPane();
		descCarteraText1 = new javax.swing.JTextArea();
		canAnaCarteraBoton1 = new javax.swing.JButton();
		anaCarteraBoton1 = new javax.swing.JButton();
		anadirVl = new javax.swing.JDialog();
		vlIsinLabel = new javax.swing.JLabel();
		vlIsinIdLabel = new javax.swing.JLabel();
		vlFechaLabel = new javax.swing.JLabel();
		vlVlLabel = new javax.swing.JLabel();
		vlVlText = new javax.swing.JFormattedTextField();
		vlCancBoton = new javax.swing.JButton();
		vlAccBoton = new javax.swing.JButton();
		vlFechaText = new javax.swing.JSpinner();
		actuaVl = new javax.swing.JDialog();
		vlIsinLabel1 = new javax.swing.JLabel();
		vlFechaLabel1 = new javax.swing.JLabel();
		vlVlLabel1 = new javax.swing.JLabel();
		vlVlText1 = new javax.swing.JFormattedTextField();
		vlCancBoton1 = new javax.swing.JButton();
		vlAccBoton1 = new javax.swing.JButton();
		anadirOp = new javax.swing.JDialog();
		opCarteraLabel = new javax.swing.JLabel();
		opFechaLabel = new javax.swing.JLabel();
		opOperacionLabel = new javax.swing.JLabel();
		opOperacionText = new javax.swing.JFormattedTextField();
		opCancBoton = new javax.swing.JButton();
		opAccBoton = new javax.swing.JButton();
		opFechaText = new javax.swing.JSpinner();
		fondoDesplegable2 = new javax.swing.JComboBox<>();
		actuaOp = new javax.swing.JDialog();
		opIsinLabel1 = new javax.swing.JLabel();
		opCarteraLabel1 = new javax.swing.JLabel();
		opFechaLabel1 = new javax.swing.JLabel();
		opOperacionLabel1 = new javax.swing.JLabel();
		opOperacionText1 = new javax.swing.JFormattedTextField();
		opCancBoton1 = new javax.swing.JButton();
		opAccBoton1 = new javax.swing.JButton();
		anadirFondoCartera = new javax.swing.JDialog();
		carteraLabel = new javax.swing.JLabel();
		fondoLabel = new javax.swing.JLabel();
		fondoDesplegable = new javax.swing.JComboBox<>();
		canAnFondoCartBoton = new javax.swing.JButton();
		aceptAnFondoCartBoton = new javax.swing.JButton();
		borrarFondoCartera = new javax.swing.JDialog();
		carteraLabel1 = new javax.swing.JLabel();
		fondoLabel1 = new javax.swing.JLabel();
		fondoDesplegable1 = new javax.swing.JComboBox<>();
		canBoFondoCartBoton = new javax.swing.JButton();
		aceptBoFondoCartBoton = new javax.swing.JButton();
		ventanaError = new javax.swing.JOptionPane();
		ventanaConfirmacion = new javax.swing.JDialog();
		confirmacionLabel = new javax.swing.JLabel();
		aceptarConfirBoton = new javax.swing.JButton();
		cancelarConfirBoton = new javax.swing.JButton();
		verOp = new javax.swing.JDialog();
		selFondoLabel = new javax.swing.JLabel();
		selFondoDespl = new javax.swing.JComboBox<>();
		selFondoCanBoton = new javax.swing.JButton();
		selFondoAcBoton = new javax.swing.JButton();
		tablaVls = new javax.swing.JDialog();
		jScrollPane3 = new javax.swing.JScrollPane();
		jScrollPane6 = new javax.swing.JScrollPane();
		anadirVlExcel = new javax.swing.JMenuItem();
		exportarExcel = new javax.swing.JMenuItem();
		importarFondo = new javax.swing.JMenuItem();

		vlTabla = new javax.swing.JTable() {
			@Override
			public Component prepareRenderer(TableCellRenderer renderer, int row, int col) {
				Component comp = super.prepareRenderer(renderer, row, col);

				if (getModel().getValueAt(row, col).getClass() == java.lang.Double.class) {
					Double value = (Double) getModel().getValueAt(row, col);
					if (value < 0) {
						comp.setForeground(Color.red);
					} else {
						comp.setForeground(Color.green);
					}
				} else {
					comp.setForeground(Color.black);
				}
				return comp;
			}
		};
		tablaOps = new javax.swing.JDialog();
		jScrollPane4 = new javax.swing.JScrollPane();
		opTabla = new javax.swing.JTable();
		vlMenu = new javax.swing.JPopupMenu();
		actuVl = new javax.swing.JMenuItem();
		borrarVl = new javax.swing.JMenuItem();
		fondoMenu = new javax.swing.JPopupMenu();
		anadVlaFondo = new javax.swing.JMenuItem();
		actualizarFondo = new javax.swing.JMenuItem();
		borrarFondo = new javax.swing.JMenuItem();
		carteraMenu = new javax.swing.JPopupMenu();
		anFondoAcartera = new javax.swing.JMenuItem();
		elFondoCartera = new javax.swing.JMenuItem();
		actualizarCartera = new javax.swing.JMenuItem();
		borrarCartera = new javax.swing.JMenuItem();
		anOperacion = new javax.swing.JMenuItem();
		verOperaciones = new javax.swing.JMenuItem();
		opMenu = new javax.swing.JPopupMenu();
		actuOp = new javax.swing.JMenuItem();
		borrarOp = new javax.swing.JMenuItem();
		buscarText = new javax.swing.JTextField();
		buscarLabel = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		barraMenu = new javax.swing.JMenuBar();
		jMenu3 = new javax.swing.JMenu();
		jMenu1 = new javax.swing.JMenu();
		botonAnadirFondo = new javax.swing.JMenuItem();
		botonAnadirCartera = new javax.swing.JMenuItem();
		jMenu4 = new javax.swing.JMenu();
		graficasBox = new javax.swing.JComboBox<>();
		nombreLabel = new javax.swing.JLabel();
		nombreText = new javax.swing.JTextField();
		nombreDesc = new javax.swing.JLabel();
		isinDesc = new javax.swing.JLabel();
		gestoraDesc = new javax.swing.JLabel();
		catDesc = new javax.swing.JLabel();
		divisaDesc = new javax.swing.JLabel();
		apComDesc = new javax.swing.JLabel();
		canComDesc = new javax.swing.JLabel();
		alphaDesc = new javax.swing.JLabel();
		betaDesc = new javax.swing.JLabel();
		varDesc = new javax.swing.JLabel();
		drawDesc = new javax.swing.JLabel();
		descripcionTex = new javax.swing.JEditorPane();
		desdeLabel = new javax.swing.JLabel();
		hastaLabel = new javax.swing.JLabel();

		selectorDeFichero = new javax.swing.JFileChooser();
		FileNameExtensionFilter xlsFilter = new FileNameExtensionFilter(" Archivos Excel (*.xls)", "xls");
		selectorDeFichero.addChoosableFileFilter(xlsFilter);
		selectorDeFichero.setFileFilter(xlsFilter);

		///////////////////////////////////////////
		opIsinLabel = new javax.swing.JLabel();
		top = new DefaultMutableTreeNode("Carteras");
		createNodes(top);
		arbolFondos = new javax.swing.JTree(top);
		arbolFondosModel = (DefaultTreeModel) arbolFondos.getModel();

		model1 = new UtilDateModel();
		model2 = new UtilDateModel();

		model1.setSelected(true);
		model2.setSelected(true);

		Properties p = new Properties();
		p.put("text.today", "Hoy");
		p.put("text.month", "Mes");
		p.put("text.year", "Año");
		JDatePanelImpl datePanel1 = new JDatePanelImpl(model1, p);
		JDatePanelImpl datePanel2 = new JDatePanelImpl(model2, p);

		desdeDate = new JDatePickerImpl(datePanel1, new DateLabelFormatter());
		hastaDate = new JDatePickerImpl(datePanel2, new DateLabelFormatter());
		///////////////////////////////////////////

		anadirFondo.setTitle("Añadir Fondo");
		anadirFondo.setAlwaysOnTop(true);
		anadirFondo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
		anadirFondo.setLocation(new java.awt.Point(0, 0));
		anadirFondo.setLocationByPlatform(true);
		anadirFondo.setModal(true);
		anadirFondo.setResizable(false);
		anadirFondo.setSize(new java.awt.Dimension(415, 370));

		isinLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		isinLabel.setText("ISIN:");

		gestoraLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		gestoraLabel.setText("Gestora:");

		tipoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		tipoLabel.setText("Tipo:");

		categoriaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		categoriaLabel.setText("Categoría:");

		divisaLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		divisaLabel.setText("Divisa:");

		apComLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		apComLabel.setText("Comision de apertura:");

		cancelComLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		cancelComLabel.setText("Comisión de cancelación:");

		canAnaFondoBoton.setText("Cancelar");
		canAnaFondoBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				canAnaFondoBotonActionPerformed(evt);
			}
		});

		anadFondoBoton.setText("Aceptar");
		anadFondoBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				anadFondoBotonActionPerformed(evt);
			}
		});

		cancelComText.setValue(new Integer(0));

		apComText.setValue(new Integer(0));

		nombreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		nombreLabel.setText("Nombre:");

		javax.swing.GroupLayout anadirFondoLayout = new javax.swing.GroupLayout(anadirFondo.getContentPane());
		anadirFondo.getContentPane().setLayout(anadirFondoLayout);
		anadirFondoLayout
				.setHorizontalGroup(
						anadirFondoLayout
								.createParallelGroup(
										javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(
										anadirFondoLayout.createSequentialGroup().addGroup(anadirFondoLayout
												.createParallelGroup(
														javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
														anadirFondoLayout.createSequentialGroup().addGap(202, 202, 202)
																.addComponent(canAnaFondoBoton).addGap(18, 18, 18)
																.addComponent(anadFondoBoton))
												.addGroup(anadirFondoLayout.createSequentialGroup().addContainerGap()
														.addGroup(anadirFondoLayout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(anadirFondoLayout.createSequentialGroup()
																		.addGroup(anadirFondoLayout
																				.createParallelGroup(
																						javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(gestoraLabel)
																				.addComponent(tipoLabel)
																				.addComponent(categoriaLabel)
																				.addComponent(divisaLabel)
																				.addComponent(cancelComLabel)
																				.addComponent(apComLabel))
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)
																		.addGroup(anadirFondoLayout
																				.createParallelGroup(
																						javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(divisaText,
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						122,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(cancelComText,
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						139,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(categoriaText,
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						122,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(tipoText,
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						122,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(gestoraText,
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						122,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(apComText,
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						139,
																						javax.swing.GroupLayout.PREFERRED_SIZE)))
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
																		anadirFondoLayout.createSequentialGroup()
																				.addGroup(anadirFondoLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(nombreLabel)
																						.addComponent(isinLabel))
																				.addPreferredGap(
																						javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addGroup(anadirFondoLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(nombreText,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(isinText,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								122,
																								javax.swing.GroupLayout.PREFERRED_SIZE))))))
												.addContainerGap()));

		anadirFondoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] { apComLabel,
				cancelComLabel, categoriaLabel, divisaLabel, gestoraLabel, isinLabel, nombreLabel, tipoLabel });

		anadirFondoLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] { cancelComText,
				categoriaText, divisaText, gestoraText, isinText, nombreText, tipoText });

		anadirFondoLayout.setVerticalGroup(anadirFondoLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(anadirFondoLayout.createSequentialGroup().addGap(23, 23, 23)
						.addGroup(anadirFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(isinLabel).addComponent(isinText, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(nombreLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(gestoraLabel).addComponent(gestoraText,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(tipoText, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(tipoLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(categoriaText, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(categoriaLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(divisaText, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(divisaLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(apComLabel).addComponent(apComText,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(cancelComLabel).addComponent(cancelComText,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
						.addGroup(anadirFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(anadFondoBoton).addComponent(canAnaFondoBoton))
						.addContainerGap()));

		anadirFondoLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { isinLabel, isinText, nombreLabel, nombreText });

		anadirFondoLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { apComLabel, cancelComLabel, categoriaLabel, categoriaText, divisaLabel,
						divisaText, gestoraLabel, gestoraText, tipoLabel, tipoText });

		actuaFondo.setTitle("Actualizar Fondo");
		actuaFondo.setAlwaysOnTop(true);
		actuaFondo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
		actuaFondo.setLocation(new java.awt.Point(0, 0));
		actuaFondo.setLocationByPlatform(true);
		actuaFondo.setModal(true);
		actuaFondo.setResizable(false);
		actuaFondo.setSize(new java.awt.Dimension(360, 350));

		isinLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		isinLabel1.setText("ISIN:");

		gestoraLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		gestoraLabel1.setText("Gestora:");

		tipoLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		tipoLabel1.setText("Tipo:");

		categoriaLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		categoriaLabel1.setText("Categoría:");

		divisaLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		divisaLabel1.setText("Divisa:");

		apComLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		apComLabel1.setText("Comision de apertura:");

		cancelComLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		cancelComLabel1.setText("Comisión de cancelación:");

		canActuaFondoBoton1.setText("Cancelar");
		canActuaFondoBoton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				canActuaFondoBoton1ActionPerformed(evt);
			}
		});

		actuaFondoBoton1.setText("Aceptar");
		actuaFondoBoton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actuaFondoBoton1ActionPerformed(evt);
			}
		});

		cancelComText1.setValue(new Integer(0));

		apComText1.setValue(new Integer(0));

		javax.swing.GroupLayout actuaFondoLayout = new javax.swing.GroupLayout(actuaFondo.getContentPane());
		actuaFondo.getContentPane().setLayout(actuaFondoLayout);
		actuaFondoLayout
				.setHorizontalGroup(actuaFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(actuaFondoLayout.createSequentialGroup()
								.addContainerGap().addGroup(actuaFondoLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actuaFondoLayout
												.createSequentialGroup()
												.addGroup(actuaFondoLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(gestoraLabel1).addComponent(tipoLabel1)
														.addComponent(categoriaLabel1)
														.addComponent(divisaLabel1).addComponent(cancelComLabel1)
														.addComponent(apComLabel1))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23,
														Short.MAX_VALUE)
												.addGroup(actuaFondoLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(divisaText1,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.PREFERRED_SIZE, 122,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(cancelComText1,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.PREFERRED_SIZE, 139,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(categoriaText1,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.PREFERRED_SIZE, 122,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(tipoText1,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.PREFERRED_SIZE, 122,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(gestoraText1,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																122, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																apComText1, javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.PREFERRED_SIZE, 139,
																javax.swing.GroupLayout.PREFERRED_SIZE))
												.addContainerGap())
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actuaFondoLayout
												.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addGroup(
														actuaFondoLayout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
																		actuaFondoLayout.createSequentialGroup()
																				.addComponent(canActuaFondoBoton1)
																				.addGap(18, 18, 18)
																				.addComponent(actuaFondoBoton1)
																				.addGap(15, 15, 15))
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
																		actuaFondoLayout.createSequentialGroup()
																				.addComponent(isinLabel1,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						228,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addGap(69, 69, 69)))))));
		actuaFondoLayout.setVerticalGroup(actuaFondoLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(actuaFondoLayout.createSequentialGroup().addGap(26, 26, 26).addComponent(isinLabel1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(actuaFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(gestoraLabel1).addComponent(gestoraText1,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(actuaFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(tipoText1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(tipoLabel1))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(actuaFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(categoriaText1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(categoriaLabel1))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(actuaFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(divisaText1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(divisaLabel1))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(actuaFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(apComLabel1).addComponent(apComText1,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(actuaFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(cancelComLabel1).addComponent(cancelComText1,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(actuaFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(actuaFondoBoton1).addComponent(canActuaFondoBoton1))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		anadirCartera.setTitle("Añadir Cartera");
		anadirCartera.setAlwaysOnTop(true);
		anadirCartera.setModal(true);
		anadirCartera.setResizable(false);
		anadirCartera.setSize(new java.awt.Dimension(380, 280));

		nomCarteraLabel.setText("Nombre de la cartera:");

		descCarteraLabel.setText("Descripcción:");

		descCarteraText.setColumns(20);
		descCarteraText.setRows(5);
		jScrollPane1.setViewportView(descCarteraText);

		canAnaCarteraBoton.setText("Cancelar");
		canAnaCarteraBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				canAnaCarteraBotonActionPerformed(evt);
			}
		});

		anaCarteraBoton.setText("Aceptar");
		anaCarteraBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				anaCarteraBotonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout anadirCarteraLayout = new javax.swing.GroupLayout(anadirCartera.getContentPane());
		anadirCartera.getContentPane().setLayout(anadirCarteraLayout);
		anadirCarteraLayout.setHorizontalGroup(
				anadirCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
						anadirCarteraLayout
								.createSequentialGroup().addContainerGap()
								.addGroup(anadirCarteraLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, anadirCarteraLayout
												.createSequentialGroup()
												.addGroup(anadirCarteraLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(descCarteraLabel).addComponent(nomCarteraLabel))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29,
														Short.MAX_VALUE)
												.addGroup(anadirCarteraLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(jScrollPane1).addComponent(nomCarteraText)))
										.addGroup(anadirCarteraLayout.createSequentialGroup()
												.addGap(0, 0, Short.MAX_VALUE).addComponent(canAnaCarteraBoton)
												.addGap(18, 18, 18).addComponent(anaCarteraBoton)))
								.addContainerGap()));

		anadirCarteraLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { anaCarteraBoton, canAnaCarteraBoton });

		anadirCarteraLayout.setVerticalGroup(anadirCarteraLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(anadirCarteraLayout.createSequentialGroup().addGap(38, 38, 38)
						.addGroup(anadirCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(nomCarteraLabel).addComponent(nomCarteraText,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(anadirCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(descCarteraLabel).addComponent(jScrollPane1,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
						.addGroup(anadirCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(canAnaCarteraBoton).addComponent(anaCarteraBoton))
						.addContainerGap()));

		anadirCarteraLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { nomCarteraLabel, nomCarteraText });

		actuaCartera.setTitle("Actualizar Cartera");
		actuaCartera.setAlwaysOnTop(true);
		actuaCartera.setModal(true);
		actuaCartera.setResizable(false);
		actuaCartera.setSize(new java.awt.Dimension(380, 280));

		nomCarteraLabel1.setText("Nombre de la cartera:");

		descCarteraLabel1.setText("Descripcción:");

		descCarteraText1.setColumns(20);
		descCarteraText1.setRows(5);
		jScrollPane5.setViewportView(descCarteraText1);

		canAnaCarteraBoton1.setText("Cancelar");
		canAnaCarteraBoton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				canAnaCarteraBoton1ActionPerformed(evt);
			}
		});

		anaCarteraBoton1.setText("Aceptar");
		anaCarteraBoton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				anaCarteraBoton1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout actuaCarteraLayout = new javax.swing.GroupLayout(actuaCartera.getContentPane());
		actuaCartera.getContentPane().setLayout(actuaCarteraLayout);
		actuaCarteraLayout.setHorizontalGroup(
				actuaCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
						actuaCarteraLayout
								.createSequentialGroup().addContainerGap()
								.addGroup(actuaCarteraLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actuaCarteraLayout
												.createSequentialGroup()
												.addGroup(actuaCarteraLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(descCarteraLabel1).addComponent(nomCarteraLabel1))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29,
														Short.MAX_VALUE)
												.addGroup(actuaCarteraLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
																false)
														.addComponent(jScrollPane5).addComponent(nomCarteraText1)))
										.addGroup(actuaCarteraLayout.createSequentialGroup()
												.addGap(0, 0, Short.MAX_VALUE).addComponent(canAnaCarteraBoton1)
												.addGap(18, 18, 18).addComponent(anaCarteraBoton1)))
								.addContainerGap()));
		actuaCarteraLayout.setVerticalGroup(actuaCarteraLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(actuaCarteraLayout.createSequentialGroup().addGap(38, 38, 38)
						.addGroup(actuaCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(nomCarteraLabel1).addComponent(nomCarteraText1,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(actuaCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(descCarteraLabel1).addComponent(jScrollPane5,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
						.addGroup(actuaCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(canAnaCarteraBoton1).addComponent(anaCarteraBoton1))
						.addContainerGap()));

		anadirVl.setTitle("Añadir VL");
		anadirVl.setAlwaysOnTop(true);
		anadirVl.setModal(true);
		anadirVl.setSize(new java.awt.Dimension(400, 260));

		vlIsinLabel.setText("ISIN:");

		vlIsinIdLabel.setText("ISIN ID");

		vlFechaLabel.setText("Fecha:");

		vlVlLabel.setText("Valor liquidativo:");

		vlVlText.setFormatterFactory(
				new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
		vlVlText.setValue(new Integer(0));

		vlCancBoton.setText("Cancelar");
		vlCancBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				vlCancBotonActionPerformed(evt);
			}
		});

		vlAccBoton.setText("Aceptar");
		vlAccBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				vlAccBotonActionPerformed(evt);
			}
		});

		vlFechaText.setModel(new javax.swing.SpinnerDateModel());
		vlFechaText.setEditor(new javax.swing.JSpinner.DateEditor(vlFechaText, "yyyy-MM-dd"));

		javax.swing.GroupLayout anadirVlLayout = new javax.swing.GroupLayout(anadirVl.getContentPane());
		anadirVl.getContentPane().setLayout(anadirVlLayout);
		anadirVlLayout
				.setHorizontalGroup(anadirVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(anadirVlLayout.createSequentialGroup()
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(anadirVlLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
										.addComponent(vlIsinIdLabel).addGroup(anadirVlLayout
												.createSequentialGroup()
												.addGroup(anadirVlLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addGroup(anadirVlLayout.createSequentialGroup()
																.addComponent(vlCancBoton)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(vlAccBoton))
														.addGroup(anadirVlLayout.createSequentialGroup()
																.addGroup(anadirVlLayout
																		.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(vlFechaLabel,
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)
																		.addGroup(anadirVlLayout.createSequentialGroup()
																				.addComponent(vlVlLabel).addGap(15, 15,
																						15))
																		.addComponent(vlIsinLabel,
																				javax.swing.GroupLayout.Alignment.TRAILING))
																.addGap(33, 33, 33)
																.addGroup(anadirVlLayout
																		.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING)
																		.addComponent(vlFechaText,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addComponent(vlVlText))))
												.addGap(22, 22, 22)))
								.addContainerGap()));

		anadirVlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] { vlFechaLabel,
				vlFechaText, vlIsinIdLabel, vlIsinLabel, vlVlLabel, vlVlText });

		anadirVlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { vlAccBoton, vlCancBoton });

		anadirVlLayout.setVerticalGroup(anadirVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(anadirVlLayout.createSequentialGroup().addGap(25, 25, 25)
						.addGroup(anadirVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(vlIsinLabel, javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(vlIsinIdLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(vlFechaLabel).addComponent(vlFechaText,
										javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(vlVlLabel).addComponent(vlVlText, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(anadirVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(vlCancBoton).addComponent(vlAccBoton))
						.addContainerGap(92, Short.MAX_VALUE)));

		anadirVlLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { vlFechaLabel, vlIsinIdLabel, vlIsinLabel, vlVlLabel, vlVlText });

		anadirVlLayout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { vlAccBoton, vlCancBoton });

		actuaVl.setTitle("Actualizar VL");
		actuaVl.setAlwaysOnTop(true);
		actuaVl.setModal(true);
		actuaVl.setSize(new java.awt.Dimension(400, 260));

		vlIsinLabel1.setText("ISIN:");

		vlFechaLabel1.setText("Fecha:");

		vlVlLabel1.setText("Valor liquidativo:");

		vlVlText1.setFormatterFactory(
				new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
		vlVlText1.setValue(new Integer(0));

		vlCancBoton1.setText("Cancelar");
		vlCancBoton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				vlCancBoton1ActionPerformed(evt);
			}
		});

		vlAccBoton1.setText("Aceptar");
		vlAccBoton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				vlAccBoton1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout actuaVlLayout = new javax.swing.GroupLayout(actuaVl.getContentPane());
		actuaVl.getContentPane().setLayout(actuaVlLayout);
		actuaVlLayout.setHorizontalGroup(actuaVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(actuaVlLayout.createSequentialGroup().addContainerGap(67, Short.MAX_VALUE)
						.addGroup(actuaVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
								.addGroup(actuaVlLayout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
										.addComponent(vlCancBoton1)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(vlAccBoton1))
								.addGroup(actuaVlLayout.createSequentialGroup().addComponent(vlVlLabel1)
										.addGap(48, 48, 48).addComponent(vlVlText1,
												javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
								.addGroup(javax.swing.GroupLayout.Alignment.LEADING,
										actuaVlLayout.createSequentialGroup().addGap(98, 98, 98)
												.addGroup(actuaVlLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(vlIsinLabel1).addComponent(vlFechaLabel1,
																javax.swing.GroupLayout.PREFERRED_SIZE, 136,
																javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGap(0, 0, Short.MAX_VALUE)))
						.addGap(37, 37, 37)));
		actuaVlLayout.setVerticalGroup(actuaVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(actuaVlLayout.createSequentialGroup().addGap(25, 25, 25).addComponent(vlIsinLabel1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(vlFechaLabel1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(actuaVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(vlVlLabel1).addComponent(vlVlText1,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(actuaVlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(vlCancBoton1).addComponent(vlAccBoton1))
						.addContainerGap(92, Short.MAX_VALUE)));

		anadirOp.setTitle("Añadir Operación");
		anadirOp.setAlwaysOnTop(true);
		anadirOp.setModal(true);
		anadirOp.setSize(new java.awt.Dimension(420, 260));

		opIsinLabel.setText("ISIN ID");

		opCarteraLabel.setText("Nomb Cart");

		opFechaLabel.setText("Fecha:");

		opOperacionLabel.setText("Participaciones(+/-):");

		opOperacionText.setFormatterFactory(
				new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
		opOperacionText.setValue(new Integer(0));

		opCancBoton.setText("Cancelar");
		opCancBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				opCancBotonActionPerformed(evt);
			}
		});

		opAccBoton.setText("Aceptar");
		opAccBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				opAccBotonActionPerformed(evt);
			}
		});

		opFechaText.setModel(new javax.swing.SpinnerDateModel());
		opFechaText.setEditor(new javax.swing.JSpinner.DateEditor(vlFechaText, "yyyy-MM-dd"));

		fondoDesplegable2.setEditable(true);
		fondoDesplegable2.setModel(new javax.swing.DefaultComboBoxModel<>());

		buttonGroup1.add(ventaBoton);
		ventaBoton.setText("Venta");

		buttonGroup1.add(compraBoton);
		compraBoton.setText("Compra");

		javax.swing.GroupLayout anadirOpLayout = new javax.swing.GroupLayout(anadirOp.getContentPane());
		anadirOp.getContentPane().setLayout(anadirOpLayout);
		anadirOpLayout.setHorizontalGroup(
				anadirOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(anadirOpLayout
						.createSequentialGroup().addGap(36, 36, 36).addGroup(anadirOpLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addGroup(javax.swing.GroupLayout.Alignment.LEADING,
										anadirOpLayout.createSequentialGroup().addGroup(anadirOpLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(anadirOpLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(opFechaLabel,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																161, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addGroup(anadirOpLayout.createSequentialGroup()
																.addComponent(opOperacionLabel).addGap(15, 15, 15)))
												.addComponent(opCarteraLabel))
												.addGap(33, 33, 33)
												.addGroup(anadirOpLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(opOperacionText,
																javax.swing.GroupLayout.PREFERRED_SIZE, 148,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(opFechaText)
														.addComponent(fondoDesplegable2, 0, 1, Short.MAX_VALUE)))
								.addGroup(anadirOpLayout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
										.addComponent(opCancBoton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(opAccBoton))
								.addGroup(anadirOpLayout.createSequentialGroup().addComponent(compraBoton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(ventaBoton)))
						.addGap(22, 22, 22)));

		anadirOpLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { compraBoton, opOperacionText, ventaBoton });

		anadirOpLayout.setVerticalGroup(anadirOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(anadirOpLayout.createSequentialGroup().addGap(22, 22, 22)
						.addGroup(anadirOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(opCarteraLabel).addComponent(fondoDesplegable2,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(opFechaLabel).addComponent(opFechaText,
										javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(anadirOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(opOperacionLabel).addComponent(opOperacionText,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(17, 17, 17)
						.addGroup(anadirOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(ventaBoton).addComponent(compraBoton))
						.addGap(18, 18, 18)
						.addGroup(anadirOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(opCancBoton).addComponent(opAccBoton))
						.addContainerGap(29, Short.MAX_VALUE)));

		actuaOp.setTitle("Añadir Operación");
		actuaOp.setAlwaysOnTop(true);
		actuaOp.setModal(true);
		actuaOp.setSize(new java.awt.Dimension(420, 260));

		opIsinLabel1.setText("ISIN ID");

		opCarteraLabel1.setText("Nomb Cart");

		opFechaLabel1.setText("Fecha:");

		opOperacionLabel1.setText("Participaciones(+/-):");

		opOperacionText1.setFormatterFactory(
				new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
		opOperacionText1.setValue(new Integer(0));

		opCancBoton1.setText("Cancelar");
		opCancBoton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				opCancBoton1ActionPerformed(evt);
			}
		});

		opAccBoton1.setText("Aceptar");
		opAccBoton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				opAccBoton1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout actuaOpLayout = new javax.swing.GroupLayout(actuaOp.getContentPane());
		actuaOp.getContentPane().setLayout(actuaOpLayout);
		actuaOpLayout
				.setHorizontalGroup(
						actuaOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(actuaOpLayout.createSequentialGroup().addGap(36, 36, 36)
										.addGroup(actuaOpLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addGroup(
														actuaOpLayout.createSequentialGroup().addComponent(opCancBoton1)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(opAccBoton1))
												.addGroup(actuaOpLayout
														.createSequentialGroup()
														.addGroup(actuaOpLayout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(opFechaLabel1,
																		javax.swing.GroupLayout.Alignment.TRAILING,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		161, javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGroup(actuaOpLayout
																		.createSequentialGroup()
																		.addGroup(actuaOpLayout
																				.createParallelGroup(
																						javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(opOperacionLabel1)
																				.addComponent(opIsinLabel1))
																		.addGap(15, 15, 15)))
														.addGap(33, 33, 33)
														.addGroup(actuaOpLayout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(actuaOpLayout.createSequentialGroup()
																		.addComponent(opCarteraLabel1).addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																				71, Short.MAX_VALUE))
																.addComponent(opOperacionText1))))
										.addGap(22, 22, 22)));
		actuaOpLayout.setVerticalGroup(actuaOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(actuaOpLayout.createSequentialGroup().addGap(25, 25, 25)
						.addGroup(actuaOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(opIsinLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(opCarteraLabel1))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(opFechaLabel1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(actuaOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(opOperacionLabel1).addComponent(opOperacionText1,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(actuaOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(opCancBoton1).addComponent(opAccBoton1))
						.addContainerGap(81, Short.MAX_VALUE)));

		anadirFondoCartera.setTitle("Seleccionar Fondo");
		anadirFondoCartera.setModal(true);
		anadirFondoCartera.setResizable(false);
		anadirFondoCartera.setSize(new java.awt.Dimension(300, 220));

		carteraLabel.setText("Cartera:");

		fondoLabel.setText("Fondo:");

		fondoDesplegable.setEditable(false);
		fondoDesplegable.setModel(new javax.swing.DefaultComboBoxModel<>());

		canAnFondoCartBoton.setText("Cancelar");
		canAnFondoCartBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				canAnFondoCartBotonActionPerformed(evt);
			}
		});

		aceptAnFondoCartBoton.setText("Aceptar");
		aceptAnFondoCartBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				aceptAnFondoCartBotonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout anadirFondoCarteraLayout = new javax.swing.GroupLayout(
				anadirFondoCartera.getContentPane());
		anadirFondoCartera.getContentPane().setLayout(anadirFondoCarteraLayout);
		anadirFondoCarteraLayout.setHorizontalGroup(
				anadirFondoCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING, anadirFondoCarteraLayout.createSequentialGroup()
								.addContainerGap(88, Short.MAX_VALUE)
								.addGroup(anadirFondoCarteraLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(carteraLabel)
										.addGroup(anadirFondoCarteraLayout.createSequentialGroup()
												.addComponent(fondoLabel).addGap(18, 18, 18).addComponent(
														fondoDesplegable, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(anadirFondoCarteraLayout.createSequentialGroup()
												.addComponent(canAnFondoCartBoton)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(aceptAnFondoCartBoton)))
								.addGap(23, 23, 23)));
		anadirFondoCarteraLayout.setVerticalGroup(anadirFondoCarteraLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(anadirFondoCarteraLayout.createSequentialGroup().addGap(51, 51, 51).addComponent(carteraLabel)
						.addGap(30, 30, 30)
						.addGroup(anadirFondoCarteraLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(fondoLabel).addComponent(fondoDesplegable,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
						.addGroup(
								anadirFondoCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(canAnFondoCartBoton).addComponent(aceptAnFondoCartBoton))
						.addContainerGap()));

		borrarFondoCartera.setTitle("Seleccionar Fondo");
		borrarFondoCartera.setModal(true);
		borrarFondoCartera.setPreferredSize(new java.awt.Dimension(300, 220));
		borrarFondoCartera.setResizable(false);
		borrarFondoCartera.setSize(new java.awt.Dimension(300, 220));

		carteraLabel1.setText("Cartera:");

		fondoLabel1.setText("Fondo:");

		fondoDesplegable1.setEditable(false);
		fondoDesplegable1.setModel(new javax.swing.DefaultComboBoxModel<>());

		canBoFondoCartBoton.setText("Cancelar");
		canBoFondoCartBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				canBoFondoCartBotonActionPerformed(evt);
			}
		});

		aceptBoFondoCartBoton.setText("Aceptar");
		aceptBoFondoCartBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				aceptBoFondoCartBotonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout borrarFondoCarteraLayout = new javax.swing.GroupLayout(
				borrarFondoCartera.getContentPane());
		borrarFondoCartera.getContentPane().setLayout(borrarFondoCarteraLayout);
		borrarFondoCarteraLayout.setHorizontalGroup(
				borrarFondoCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING, borrarFondoCarteraLayout.createSequentialGroup()
								.addContainerGap(81, Short.MAX_VALUE)
								.addGroup(borrarFondoCarteraLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(carteraLabel1)
										.addGroup(borrarFondoCarteraLayout.createSequentialGroup()
												.addComponent(fondoLabel1).addGap(18, 18, 18).addComponent(
														fondoDesplegable1, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(borrarFondoCarteraLayout.createSequentialGroup()
												.addComponent(canBoFondoCartBoton)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(aceptBoFondoCartBoton)))
								.addGap(23, 23, 23)));
		borrarFondoCarteraLayout.setVerticalGroup(borrarFondoCarteraLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(borrarFondoCarteraLayout.createSequentialGroup().addGap(51, 51, 51)
						.addComponent(carteraLabel1).addGap(30, 30, 30)
						.addGroup(borrarFondoCarteraLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(fondoLabel1).addComponent(fondoDesplegable1,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
						.addGroup(
								borrarFondoCarteraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(canBoFondoCartBoton).addComponent(aceptBoFondoCartBoton))
						.addContainerGap()));

		ventanaConfirmacion.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		ventanaConfirmacion.setTitle("Confirmación");
		ventanaConfirmacion.setModal(true);
		ventanaConfirmacion.setResizable(false);

		confirmacionLabel.setText("Pregunta de confirmación");

		aceptarConfirBoton.setText("Cancelar");
		aceptarConfirBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				aceptarConfirBotonActionPerformed(evt);
			}
		});

		cancelarConfirBoton.setText("Aceptar");
		cancelarConfirBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelarConfirBotonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout ventanaConfirmacionLayout = new javax.swing.GroupLayout(
				ventanaConfirmacion.getContentPane());
		ventanaConfirmacion.getContentPane().setLayout(ventanaConfirmacionLayout);
		ventanaConfirmacionLayout.setHorizontalGroup(ventanaConfirmacionLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(ventanaConfirmacionLayout.createSequentialGroup().addGap(53, 53, 53)
						.addGroup(ventanaConfirmacionLayout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(confirmacionLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(ventanaConfirmacionLayout.createSequentialGroup()
										.addComponent(aceptarConfirBoton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(cancelarConfirBoton)))
						.addContainerGap(54, Short.MAX_VALUE)));
		ventanaConfirmacionLayout.setVerticalGroup(
				ventanaConfirmacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(ventanaConfirmacionLayout.createSequentialGroup().addGap(43, 43, 43)
								.addComponent(confirmacionLabel).addGap(53, 53, 53)
								.addGroup(ventanaConfirmacionLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(aceptarConfirBoton).addComponent(cancelarConfirBoton))
								.addContainerGap(53, Short.MAX_VALUE)));

		verOp.setPreferredSize(new java.awt.Dimension(320, 200));
		verOp.setSize(new java.awt.Dimension(320, 200));

		selFondoLabel.setText("Seleccionar fondo:");

		selFondoDespl.setModel(new javax.swing.DefaultComboBoxModel<>());

		selFondoCanBoton.setText("Cancelar");
		selFondoCanBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				selFondoCanBotonActionPerformed(evt);
			}
		});

		selFondoAcBoton.setText("Aceptar");
		selFondoAcBoton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				selFondoAcBotonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout verOpLayout = new javax.swing.GroupLayout(verOp.getContentPane());
		verOp.getContentPane().setLayout(verOpLayout);
		verOpLayout.setHorizontalGroup(verOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(verOpLayout.createSequentialGroup().addGroup(verOpLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(verOpLayout.createSequentialGroup().addContainerGap().addComponent(selFondoLabel)
								.addGap(18, 18, 18).addComponent(selFondoDespl, javax.swing.GroupLayout.PREFERRED_SIZE,
										128, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(verOpLayout.createSequentialGroup().addGap(89, 89, 89).addComponent(selFondoCanBoton)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(selFondoAcBoton)))
						.addContainerGap(28, Short.MAX_VALUE)));
		verOpLayout.setVerticalGroup(verOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(verOpLayout.createSequentialGroup().addGap(48, 48, 48)
						.addGroup(verOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(selFondoDespl, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(selFondoLabel))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(verOpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(selFondoCanBoton).addComponent(selFondoAcBoton))
						.addContainerGap(88, Short.MAX_VALUE)));

		tablaVls.setTitle("Valores Liquidativos");
		tablaVls.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		tablaVls.setSize(new java.awt.Dimension(700, 450));

		vlTabla.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "ISIN", "Fecha", "Valor Liquidativo", "Diferencia" }) {

			Class[] types = new Class[] { java.lang.String.class, FundVl.class, java.lang.String.class,
					java.lang.Double.class };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		vlTabla.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				vlTablaMousePressed(evt);
			}

			public void mouseReleased(java.awt.event.MouseEvent evt) {
				vlTablaMouseReleased(evt);
			}
		});
		jScrollPane3.setViewportView(vlTabla);

		javax.swing.GroupLayout tablaVlsLayout = new javax.swing.GroupLayout(tablaVls.getContentPane());
		tablaVls.getContentPane().setLayout(tablaVlsLayout);
		tablaVlsLayout.setHorizontalGroup(tablaVlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(tablaVlsLayout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
						.addContainerGap()));
		tablaVlsLayout.setVerticalGroup(tablaVlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(tablaVlsLayout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
						.addContainerGap()));

		tablaOps.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		tablaOps.setTitle("Operaciones");
		tablaOps.setSize(new java.awt.Dimension(700, 450));

		opTabla.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Fecha", "Operación", "Cantidad", "Precio", "Participaciones Finales" }) {

			Class[] types = new Class[] { FundPort.class, java.lang.String.class, java.lang.Integer.class,
					java.lang.Double.class, java.lang.Integer.class };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		opTabla.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				opTablaMouseReleased(evt);
			}
		});

		jScrollPane4.setViewportView(opTabla);

		javax.swing.GroupLayout tablaOpsLayout = new javax.swing.GroupLayout(tablaOps.getContentPane());
		tablaOps.getContentPane().setLayout(tablaOpsLayout);
		tablaOpsLayout.setHorizontalGroup(tablaOpsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(tablaOpsLayout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
						.addContainerGap()));
		tablaOpsLayout.setVerticalGroup(tablaOpsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(tablaOpsLayout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
						.addContainerGap()));

		actuVl.setText("Actualizar");
		actuVl.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actuVlActionPerformed(evt);
			}
		});
		vlMenu.add(actuVl);

		borrarVl.setText("Borrar");
		borrarVl.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				borrarVlActionPerformed(evt);
			}
		});
		vlMenu.add(borrarVl);

		anadVlaFondo.setText("Añadir VL");
		anadVlaFondo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				anadVlaFondoActionPerformed(evt);
			}
		});
		fondoMenu.add(anadVlaFondo);

		actualizarFondo.setText("Actualizar");
		actualizarFondo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actualizarFondoActionPerformed(evt);
			}
		});
		fondoMenu.add(actualizarFondo);

		borrarFondo.setText("Borrar");
		borrarFondo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				borrarFondoActionPerformed(evt);
			}
		});
		fondoMenu.add(borrarFondo);

		verVl.setText("Ver Vls");
		verVl.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				verVlActionPerformed(evt);
			}
		});
		fondoMenu.add(verVl);

		anFondoAcartera.setText("Añadir Fondo");
		anFondoAcartera.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				anFondoAcarteraActionPerformed(evt);
			}
		});
		anadirVlExcel.setText("Importar Vls");
		anadirVlExcel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				anadirVlExcelActionPerformed(evt);
			}
		});
		fondoMenu.add(anadirVlExcel);

		exportarExcel.setText("Exportar Fondo");
		exportarExcel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exportarExcelActionPerformed(evt);
			}
		});
		fondoMenu.add(exportarExcel);

		carteraMenu.add(anFondoAcartera);

		elFondoCartera.setText("Eliminar Fondo");
		elFondoCartera.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				elFondoCarteraActionPerformed(evt);
			}
		});
		carteraMenu.add(elFondoCartera);

		actualizarCartera.setText("Actualizar Cartera");
		actualizarCartera.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actualizarCarteraActionPerformed(evt);
			}
		});
		carteraMenu.add(actualizarCartera);

		borrarCartera.setText("Borrar Cartera");
		borrarCartera.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				borrarCarteraActionPerformed(evt);
			}
		});
		carteraMenu.add(borrarCartera);

		anOperacion.setText("Añadir Operación");
		anOperacion.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				anOperacionActionPerformed(evt);
			}
		});
		carteraMenu.add(anOperacion);

		verOperaciones.setText("Ver Operaciones");
		verOperaciones.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				verOperacionesActionPerformed(evt);
			}
		});
		carteraMenu.add(verOperaciones);

		actuOp.setText("Actualizar");
		actuOp.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actuOpActionPerformed(evt);
			}
		});
		opMenu.add(actuOp);

		borrarOp.setText("Borrar");
		borrarOp.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				borrarOpActionPerformed(evt);
			}
		});
		opMenu.add(borrarOp);

		selectorDeFichero.setDialogTitle("Seleccionar Fichero");
		selectorDeFichero.setName("Seleccionar Fichero");

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Aplicación");
		setName("Ventana Principal"); // NOI18N
		setSize(new java.awt.Dimension(1024, 768));

		buscarText.setText("Buscar");

		try {
			buscarLabel.setIcon(new javax.swing.ImageIcon(
					getClass().getResource("/Aplicacion-TFG/src/main/java/tfg/app/util/images/buscar.png")));
		} catch (java.lang.NullPointerException e) {

		}

		arbolFondos.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mousePressed(java.awt.event.MouseEvent evt) {
				arbolFondosMousePressed(evt);
			}

			public void mouseReleased(java.awt.event.MouseEvent evt) {
				arbolFondosMouseReleased(evt);
			}
		});
		arbolFondos.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
			public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
				arbolFondosValueChanged(evt);
			}
		});
		jScrollPane2.setViewportView(arbolFondos);

		panelGraficas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		panelGraficas.setPreferredSize(new java.awt.Dimension(756, 635));
		panelGraficas.setRequestFocusEnabled(false);

		javax.swing.GroupLayout panelGraficasLayout = new javax.swing.GroupLayout(panelGraficas);
		panelGraficas.setLayout(panelGraficasLayout);
		panelGraficasLayout.setHorizontalGroup(panelGraficasLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 759, Short.MAX_VALUE));
		panelGraficasLayout.setVerticalGroup(panelGraficasLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 566, Short.MAX_VALUE));

		descripcionTex.setEditable(false);
		jScrollPane6.setViewportView(descripcionTex);

		graficasBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				graficasBoxActionPerformed(evt);
			}
		});
		graficasBox.setVisible(false);

		jMenu3.setText("Archivo");

		jMenu1.setText("Añadir");

		desdeLabel.setText("Desde: ");

		hastaLabel.setText("Hasta: ");

		desdeDate.setVisible(false);
		hastaDate.setVisible(false);

		desdeLabel.setVisible(false);
		hastaLabel.setVisible(false);

		desdeDate.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				desdeDateActionPerformed(evt);
			}
		});

		hastaDate.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				hastaDateActionPerformed(evt);
			}
		});

		botonAnadirFondo.setText("Fondo");
		botonAnadirFondo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				botonAnadirFondoActionPerformed(evt);
			}
		});
		jMenu1.add(botonAnadirFondo);

		botonAnadirCartera.setText("Cartera");
		botonAnadirCartera.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				botonAnadirCarteraActionPerformed(evt);
			}
		});
		jMenu1.add(botonAnadirCartera);

		jMenu3.add(jMenu1);

		importarFondo.setText("Importar fondo");
		importarFondo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				importarFondoActionPerformed(evt);
			}
		});
		jMenu3.add(importarFondo);

		barraMenu.add(jMenu3);

		jMenu4.setText("Editar");
		barraMenu.add(jMenu4);

		setJMenuBar(barraMenu);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE,
										220, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										layout.createSequentialGroup().addComponent(buscarText)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(buscarLabel)))
						.addGap(18, 18, 18)
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(
												panelGraficas, javax.swing.GroupLayout.DEFAULT_SIZE, 751,
												Short.MAX_VALUE)
										.addComponent(jScrollPane6)
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
												.createSequentialGroup()
												.addComponent(graficasBox, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(desdeLabel)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(desdeDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(12, 12, 12).addComponent(hastaLabel)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(hastaDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(20, 20, 20)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(buscarText, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(buscarLabel)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(hastaDate, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(desdeDate, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(desdeLabel).addComponent(hastaLabel).addComponent(graficasBox,
										javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
						.addGroup(layout.createSequentialGroup()
								.addComponent(panelGraficas, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 96,
										javax.swing.GroupLayout.PREFERRED_SIZE)))
				.addContainerGap()));

		layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] { buscarLabel, buscarText });

		layout.linkSize(javax.swing.SwingConstants.VERTICAL,
				new java.awt.Component[] { desdeDate, desdeLabel, hastaDate, hastaLabel });

		pack();
	}// </editor-fold>

	//////////////////////////////////////////////////////////////////////////////////////////

	// Click en el boton de aÃ±adir fondo del menu archivo -> aÃ±adir
	private void botonAnadirFondoActionPerformed(java.awt.event.ActionEvent evt) {

		isinText.setText("");
		gestoraText.setText("");
		tipoText.setText("");
		categoriaText.setText("");
		cancelComText.setValue(0);
		apComText.setValue(0);
		divisaText.setText("");

		anadirFondo.setLocationRelativeTo(this);
		anadirFondo.setVisible(true);

	}

	// Click en el boton aceptar de la ventana de aÃ±adir fondo
	private void anadFondoBotonActionPerformed(java.awt.event.ActionEvent evt) {

		FundDesc fund = new FundDesc(isinText.getText(), nombreText.getText(), gestoraText.getText(),
				tipoText.getText(), categoriaText.getText(), divisaText.getText(),
				Double.valueOf(apComText.getValue().toString()), Double.valueOf(cancelComText.getValue().toString()));

		try {
			fundService.addFund(fund);
		} catch (InputValidationException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		anadirFondo.setVisible(false);

	}

	// Click en el boton cancelar de la ventana de aÃ±adir fondo
	private void canAnaFondoBotonActionPerformed(java.awt.event.ActionEvent evt) {

		anadirFondo.setVisible(false);

	}

	// Click en el boton de aÃ±adir cartera del menu archivo -> aÃ±adir
	private void botonAnadirCarteraActionPerformed(java.awt.event.ActionEvent evt) {

		descCarteraText.setText("");
		nomCarteraText.setText("");
		anadirCartera.setLocationRelativeTo(this);
		anadirCartera.setVisible(true);

	}

	// Click en el boton cancelar de la ventana de aÃ±adir cartera
	private void canAnaCarteraBotonActionPerformed(java.awt.event.ActionEvent evt) {

		anadirCartera.setVisible(false);

	}

	// Click en el boton aÃ±adir de la ventana de aÃ±adir cartera
	private void anaCarteraBotonActionPerformed(java.awt.event.ActionEvent evt) {

		FundPort fundPort = new FundPort(nomCarteraText.getText(), descCarteraText.getText());
		try {
			fundService.addFundPortfolio(fundPort);
		} catch (InputValidationException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}
		createNodes(top);
		arbolFondosModel.reload(top);

		anadirCartera.setVisible(false);
	}

	// Seleccionar un elemento del arbol
	private void arbolFondosValueChanged(javax.swing.event.TreeSelectionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();

		if (node == null) {
			return;
		}
		Object nodeInfo = node.getUserObject();

		desdeDate.setVisible(false);
		hastaDate.setVisible(false);

		desdeLabel.setVisible(false);
		hastaLabel.setVisible(false);

		if (nodeInfo.getClass() == tfg.app.model.entities.FundDesc.class) {

			graficasBox.setModel(new javax.swing.DefaultComboBoxModel<>(
					new String[] { "Descripción", "Historial Vl", "Hist Renta", "Renta Esperada" }));

			graficasBox.setSelectedItem("Descripción");
			graficasBox.setVisible(true);

		}
		if (nodeInfo.getClass() == tfg.app.model.entities.FundPort.class) {

			graficasBox.setModel(new javax.swing.DefaultComboBoxModel<>(
					new String[] { "Distribución", "Fondos Norm", "Rentabilidad" }));

			graficasBox.setSelectedItem("Distribución");
			graficasBox.setVisible(true);

		}

	}

	// Popupmenu en el arbol
	private void arbolFondosMousePressed(java.awt.event.MouseEvent evt) {
		if (evt.isPopupTrigger()) {

			DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();

			if (node == null) {
				return;
			}
			Object nodeInfo = node.getUserObject();

			if (nodeInfo.getClass() == tfg.app.model.entities.FundDesc.class) {
				fondoMenu.show(evt.getComponent(), evt.getX(), evt.getY());
				return;
			}
			if (nodeInfo.getClass() == tfg.app.model.entities.FundPort.class) {
				carteraMenu.show(evt.getComponent(), evt.getX(), evt.getY());
				return;
			}

		}

	}

	// Popupmenu en el arbol
	private void arbolFondosMouseReleased(java.awt.event.MouseEvent evt) {

		if (evt.isPopupTrigger()) {

			DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();

			if (node == null) {
				return;
			}
			Object nodeInfo = node.getUserObject();

			if (nodeInfo.getClass() == tfg.app.model.entities.FundDesc.class) {
				fondoMenu.show(evt.getComponent(), evt.getX(), evt.getY());
				return;
			}
			if (nodeInfo.getClass() == tfg.app.model.entities.FundPort.class) {
				carteraMenu.show(evt.getComponent(), evt.getX(), evt.getY());
				return;
			}

		}
	}

	// Actualizar del popupmenu de vl
	private void actuVlActionPerformed(java.awt.event.ActionEvent evt) {

		FundVl fundVl;
		try {
			DefaultTableModel model = (DefaultTableModel) vlTabla.getModel();
			int row = vlTabla.getSelectedRow();
			fundVl = (FundVl) model.getValueAt(row, 1);
		} catch (java.lang.ArrayIndexOutOfBoundsException e) {
			return;
		}

		vlIsinLabel1.setText("ISIN: " + fundVl.getFundDesc().getfId());
		vlFechaLabel1.setText("Fecha: " + fundVl.getDay());
		vlVlText1.setText(fundVl.getVl().toString());

		actuaVl.setLocationRelativeTo(this);
		actuaVl.setVisible(true);
	}

	// Borrar del popupmenu de vl
	private void borrarVlActionPerformed(java.awt.event.ActionEvent evt) {

		FundVl fundVl;
		try {
			DefaultTableModel model = (DefaultTableModel) vlTabla.getModel();
			int row = vlTabla.getSelectedRow();
			fundVl = (FundVl) model.getValueAt(row, 1);
		} catch (java.lang.ArrayIndexOutOfBoundsException e) {
			return;
		}
		try {

			fundService.removeFundVl(fundVl);
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de borrado", JOptionPane.ERROR_MESSAGE);
			return;
		}

		verVlActionPerformed(evt);

	}

	// Anadir vl del popumpmenu de Fondo
	private void anadVlaFondoActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundDesc fundDesc = (FundDesc) nodeInfo;

		vlIsinIdLabel.setText(fundDesc.getfId());
		vlVlText.setValue(0);

		anadirVl.setLocationRelativeTo(this);
		anadirVl.setVisible(true);

	}

	// Actualizar del popupmenu de Fondo
	private void actualizarFondoActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundDesc fundDesc = (FundDesc) nodeInfo;

		isinLabel1.setText("ISIN: " + fundDesc.getfId());
		gestoraText1.setText(fundDesc.getfGest());
		tipoText1.setText(fundDesc.getfType());
		categoriaText1.setText(fundDesc.getfCategory());
		cancelComText1.setValue(fundDesc.getfCancelComm());
		apComText1.setValue(fundDesc.getfSubComm());
		divisaText1.setText(fundDesc.getfCurrency());

		actuaFondo.setLocationRelativeTo(this);
		actuaFondo.setVisible(true);
	}

	// Borrar del popupmenu de Fondo
	private void borrarFondoActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundDesc fundDesc = (FundDesc) nodeInfo;

		try {
			fundService.removeFund(fundDesc);
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de borrado", JOptionPane.ERROR_MESSAGE);
			return;
		}

		createNodes(top);
		arbolFondosModel.reload(top);

	}

	// Anadir fondo a cartera del popupmenu de cartera
	private void anFondoAcarteraActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		carteraLabel.setText("Cartera: " + fundPort.getpName());

		List<FundDesc> allFunds = fundService.findAllFunds();
		List<FundDesc> fundsOfPortfolio = null;

		try {
			fundsOfPortfolio = fundService.findFundsOfPortfolio(fundPort);
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		allFunds.removeAll(fundsOfPortfolio);

		fondoDesplegable.removeAllItems();

		for (int x = 0; x < allFunds.size(); x++) {
			fondoDesplegable.addItem(allFunds.get(x));
		}
		anadirFondoCartera.setLocationRelativeTo(this);
		anadirFondoCartera.setVisible(true);
	}

	// Actualizar cartera del popupmenu de cartera
	private void actualizarCarteraActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		nomCarteraText1.setText(fundPort.getpName());
		descCarteraText1.setText(fundPort.getpDesc());

		actuaCartera.setLocationRelativeTo(this);
		actuaCartera.setVisible(true);

	}

	// Borrar cartera del popupmenu de cartera
	private void borrarCarteraActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		try {
			fundService.removeFundPortfolio(fundPort);
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de borrado", JOptionPane.ERROR_MESSAGE);
			return;
		}

		createNodes(top);
		arbolFondosModel.reload(top);
	}

	// Click en el boton de cancelar de la ventana actualizar fondo
	private void canActuaFondoBoton1ActionPerformed(java.awt.event.ActionEvent evt) {

		actuaFondo.setVisible(false);

	}

	// Click en el boton de aceptar de la ventana actualizar fondo
	private void actuaFondoBoton1ActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundDesc fundDesc = (FundDesc) nodeInfo;

		fundDesc.setfType(tipoText1.getText());
		fundDesc.setfGest(gestoraText1.getText());
		fundDesc.setfCategory(categoriaText1.getText());
		fundDesc.setfCurrency(divisaText1.getText());
		fundDesc.setfCancelComm(Double.valueOf(cancelComText1.getValue().toString()));
		fundDesc.setfSubComm(Double.valueOf(apComText1.getValue().toString()));

		try {

			fundService.updateFund(fundDesc);

		} catch (InputValidationException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		actuaFondo.setVisible(false);

	}

	// Click en el boton de aceptar de la ventana anadir VL
	private void vlAccBotonActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundDesc fundDesc = (FundDesc) nodeInfo;

		Date input = (Date) vlFechaText.getValue();

		LocalDate date = input.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

		FundVl fundVl = new FundVl(date, Double.valueOf(vlVlText.getValue().toString()), fundDesc);

		try {
			fundService.addFundVl(fundVl);
		} catch (InputValidationException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		anadirVl.setVisible(false);
	}

	// Click en el boton de cancelar de la ventana anadir VL
	private void vlCancBotonActionPerformed(java.awt.event.ActionEvent evt) {

		anadirVl.setVisible(false);

	}

	// Eliminar fondo de cartera del popupmenu de cartera
	private void elFondoCarteraActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		carteraLabel1.setText("Cartera: " + fundPort.getpName());

		List<FundDesc> fundsOfPortfolio = null;

		try {
			fundsOfPortfolio = fundService.findFundsOfPortfolio(fundPort);
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		fondoDesplegable1.removeAllItems();

		for (int x = 0; x < fundsOfPortfolio.size(); x++) {
			fondoDesplegable1.addItem(fundsOfPortfolio.get(x));
		}

		borrarFondoCartera.setLocationRelativeTo(this);
		borrarFondoCartera.setVisible(true);

	}

	// Añadir operacion del popupmenu de cartera
	private void anOperacionActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		opCarteraLabel.setText(fundPort.getpName());
		compraBoton.setSelected(true);

		List<FundDesc> fundsOfPortfolio = null;

		try {
			fundsOfPortfolio = fundService.findFundsOfPortfolio(fundPort);
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		fondoDesplegable2.removeAllItems();

		for (int x = 0; x < fundsOfPortfolio.size(); x++) {
			fondoDesplegable2.addItem(fundsOfPortfolio.get(x));
		}

		opOperacionText.setValue(0);
		anadirOp.setLocationRelativeTo(this);
		anadirOp.setVisible(true);

	}

	// Ver operaciones del popupmenu de cartera
	private void verOperacionesActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		List<FundDesc> fundsOfPortfolio = null;

		try {
			fundsOfPortfolio = fundService.findFundsOfPortfolio(fundPort);
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		selFondoDespl.removeAllItems();

		for (int x = 0; x < fundsOfPortfolio.size(); x++) {
			selFondoDespl.addItem(fundsOfPortfolio.get(x));
		}

		verOp.setLocationRelativeTo(this);
		verOp.setVisible(true);

	}

	private void opTablaMouseReleased(java.awt.event.MouseEvent evt) {
		if (evt.isPopupTrigger()) {

			opMenu.show(evt.getComponent(), evt.getX(), evt.getY());

		}
	}

	// Actualizar operacion del popupmenu de operaciones
	private void actuOpActionPerformed(java.awt.event.ActionEvent evt) {

		PortOp portOp;
		try {
			DefaultTableModel model = (DefaultTableModel) opTabla.getModel();
			int row = opTabla.getSelectedRow();
			portOp = (PortOp) model.getValueAt(row, 0);
		} catch (java.lang.ArrayIndexOutOfBoundsException e) {
			return;
		}

		opCarteraLabel1.setText(portOp.getPortDesc().getFundPort().getpName());
		opIsinLabel1.setText(portOp.getPortDesc().getFundDesc().getfId());
		opFechaLabel1.setText(portOp.getDay().toString());

		actuaOp.setLocationRelativeTo(this);
		actuaOp.setVisible(true);
	}

	// Borrar operacion del popupmenu de operaciones
	private void borrarOpActionPerformed(java.awt.event.ActionEvent evt) {
		PortOp portOp;
		try {
			DefaultTableModel model = (DefaultTableModel) opTabla.getModel();
			int row = opTabla.getSelectedRow();
			portOp = (PortOp) model.getValueAt(row, 0);
		} catch (java.lang.ArrayIndexOutOfBoundsException e) {
			return;
		}

		try {
			fundService.removePortOp(portOp);
		} catch (InputValidationException | InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		selFondoAcBotonActionPerformed(evt);
	}

	// Click en el boton cancelar de la ventana actualizar cartera
	private void canAnaCarteraBoton1ActionPerformed(java.awt.event.ActionEvent evt) {

		actuaCartera.setVisible(false);

	}

	// Click en el boton aceptar de la ventana actualizar cartera
	private void anaCarteraBoton1ActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		fundPort.setpName(nomCarteraText1.getText());
		fundPort.setpDesc(descCarteraText1.getText());

		try {

			fundService.updateFundPortfolio(fundPort);

		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de actualización",
					JOptionPane.ERROR_MESSAGE);
			return;
		} catch (InputValidationException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de actualización",
					JOptionPane.ERROR_MESSAGE);
			return;
		} finally {

			createNodes(top);
			arbolFondosModel.reload(top);

		}

		actuaCartera.setVisible(false);
	}

	// Click en el boton cancelar de la ventana actualizar vl
	private void vlCancBoton1ActionPerformed(java.awt.event.ActionEvent evt) {
		actuaVl.setVisible(false);
	}

	// Click en el boton aceptar de la ventana actualizar vl
	private void vlAccBoton1ActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultTableModel model = (DefaultTableModel) vlTabla.getModel();
		int row = vlTabla.getSelectedRow();
		FundVl fundVl = (FundVl) model.getValueAt(row, 1);

		fundVl.setVl(Double.valueOf(vlVlText1.getValue().toString()));
		try {
			fundService.updateFundVl(fundVl);
		} catch (InputValidationException | InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}
		actuaVl.setVisible(false);

		verVlActionPerformed(evt);
	}

	// Click en el boton aceptar de la ventana anadir operacion
	private void opAccBotonActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		FundDesc fundDesc = (FundDesc) fondoDesplegable2.getSelectedItem();

		Integer x = Integer.valueOf(opOperacionText.getValue().toString());
		x = Math.abs(x);// Quizas es mejor formatear la entrada de texto para
						// que no admita valores negativos

		if (ventaBoton.isSelected()) {
			x = x * -1;
		}

		if (fundDesc == null) {
			anadirOp.setVisible(false);
			return;
		}

		try {

			Date input = (Date) opFechaText.getValue();
			LocalDate date = input.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
			PortOp portOp = new PortOp(date, fundPort, fundDesc, x);

			fundService.addPortOp(portOp);
		} catch (InputValidationException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de actualización",
					JOptionPane.ERROR_MESSAGE);
			return;
		}

		anadirOp.setVisible(false);

	}

	// Click en el boton cancelar de la ventana anadir operacion
	private void opCancBotonActionPerformed(java.awt.event.ActionEvent evt) {

		anadirOp.setVisible(false);

	}

	// Click en el boton aceptar de la ventana actualizar operacion
	private void opAccBoton1ActionPerformed(java.awt.event.ActionEvent evt) {

		PortOp portOp;
		try {
			DefaultTableModel model = (DefaultTableModel) opTabla.getModel();
			int row = opTabla.getSelectedRow();
			portOp = (PortOp) model.getValueAt(row, 0);
		} catch (java.lang.ArrayIndexOutOfBoundsException e) {
			return;
		}

		portOp.setfPartOp((Integer.valueOf(opOperacionText1.getValue().toString())));

		try {
			fundService.UpdatePortOp(portOp);
		} catch (InputValidationException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}
		actuaOp.setVisible(false);

		selFondoAcBotonActionPerformed(evt);
	}

	// Click en el boton cancelar de la ventana actualizar operacion
	private void opCancBoton1ActionPerformed(java.awt.event.ActionEvent evt) {
		//
	}

	// Click en el boton aceptar de la ventana de confirmacion
	private void aceptarConfirBotonActionPerformed(java.awt.event.ActionEvent evt) {

	}

	// Click en el boton cancelar de la ventana de confirmacion
	private void cancelarConfirBotonActionPerformed(java.awt.event.ActionEvent evt) {
		//
	}

	private static void createNodes(DefaultMutableTreeNode top) {

		DefaultMutableTreeNode found = null;
		DefaultMutableTreeNode porfolio = null;

		List<FundPort> fundPorts = fundService.findAllFundPortfolios();

		top.removeAllChildren();

		for (int x = 0; x < fundPorts.size(); x++) {
			porfolio = new DefaultMutableTreeNode(fundPorts.get(x));
			top.add(porfolio);
			try {
				List<FundDesc> fundDescs = fundService.findFundsOfPortfolio(fundPorts.get(x));

				for (int x1 = 0; x1 < fundDescs.size(); x1++) {
					found = new DefaultMutableTreeNode(fundDescs.get(x1));
					porfolio.add(found);
				}
			} catch (InstanceNotFoundException e) {
				// ¡
				e.printStackTrace();
			}
		}
	}
	///////////////////////////

	// Click en el boton de aceptar de la ventana añadir fondo a cartera
	private void aceptAnFondoCartBotonActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		FundDesc fundDesc = (FundDesc) fondoDesplegable.getSelectedItem();

		if (fundDesc == null) {

			anadirFondoCartera.setVisible(false);
			return;

		}

		try {
			fundService.addPortDesc(fundPort, fundDesc);
		} catch (InstanceNotFoundException | InputValidationException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de actualización",
					JOptionPane.ERROR_MESSAGE);
			return;
		}

		createNodes(top);
		arbolFondosModel.reload(top);
		anadirFondoCartera.setVisible(false);

	}

	// Click en el boton cancelar de la ventana añadir fondo a cartera
	private void canAnFondoCartBotonActionPerformed(java.awt.event.ActionEvent evt) {

		anadirFondoCartera.setVisible(false);

	}

	// Click en el boton cancelar de la ventana borrar fondo de cartera
	private void canBoFondoCartBotonActionPerformed(java.awt.event.ActionEvent evt) {

		borrarFondoCartera.setVisible(false);

	}

	// Click en el boton aceptar de la ventana borrar fondo de cartera
	private void aceptBoFondoCartBotonActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		FundDesc fundDesc = (FundDesc) fondoDesplegable1.getSelectedItem();

		if (fundDesc == null) {

			borrarFondoCartera.setVisible(false);
			return;

		}

		try {
			fundService.removePortDesc(fundPort, fundDesc);
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de borrado", JOptionPane.ERROR_MESSAGE);
			return;
		}

		createNodes(top);
		arbolFondosModel.reload(top);
		borrarFondoCartera.setVisible(false);

	}

	// Click en el boton aceptar de la ventana de seleccionar fondo para ver sus
	// operaciones
	private void selFondoAcBotonActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundPort fundPort = (FundPort) nodeInfo;

		DefaultTableModel model = (DefaultTableModel) opTabla.getModel();
		model.setRowCount(0);

		List<PortOp> portOpsOfPortfolio = null;

		FundDesc fundDesc = (FundDesc) selFondoDespl.getSelectedItem();

		if (fundDesc == null) {

			verOp.setVisible(false);
			return;

		}

		try {
			portOpsOfPortfolio = fundService.findAllPortOp(fundPort, fundDesc);
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		for (int x = 0; x < portOpsOfPortfolio.size(); x++) {

			PortOp portOp = portOpsOfPortfolio.get(x);
			Integer partOp = portOp.getfPartOp();
			String string = "";

			if (partOp < 0) {
				partOp = Math.abs(partOp);
				string = "Venta";
			} else {
				string = "Compra";
			}

			model.addRow(new Object[] { portOp, string, partOp, portOp.getfPrice(), portOp.getfPartfin() });
		}

		tablaOps.setLocationRelativeTo(this);
		tablaOps.setVisible(true);

	}

	// Click en el boton cancelar de la ventana de seleccionar fondo para ver
	// sus operaciones
	private void selFondoCanBotonActionPerformed(java.awt.event.ActionEvent evt) {
		verOp.setVisible(false);
	}

	// Click en ver vl del popupmenu de fondo
	private void verVlActionPerformed(java.awt.event.ActionEvent evt) {
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();
		Object nodeInfo = node.getUserObject();
		FundDesc fundDesc = (FundDesc) nodeInfo;

		DefaultTableModel model = (DefaultTableModel) vlTabla.getModel();
		model.setRowCount(0);

		if (fundDesc == null) {
			return;
		}
		try {
			fundDesc = fundService.findFund(fundDesc.getfId());
		} catch (InstanceNotFoundException e) {
			JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada", JOptionPane.ERROR_MESSAGE);
			return;
		}

		for (int x = 0; x < fundDesc.getFundVls().size(); x++) {

			FundVl fundVl = fundDesc.getFundVls().get(x);

			if (x != 0) {
				model.addRow(
						new Object[] { fundDesc.getfId(), fundVl, fundVl.getVl() + " " + fundDesc.getfCurrency() + "s",
								fundVl.getVl() - fundDesc.getFundVls().get(x - 1).getVl() });

			} else {
				model.addRow(new Object[] { fundDesc.getfId(), fundVl,
						fundVl.getVl() + " " + fundDesc.getfCurrency() + "s", 0.0 });
			}
		}
		tablaVls.setLocationRelativeTo(this);
		tablaVls.setVisible(true);
	}

	// Click derecho en la tabla de vls
	private void vlTablaMousePressed(java.awt.event.MouseEvent evt) {
		// DefaultTableModel model = (DefaultTableModel) vlTabla.getModel();
		// int row = vlTabla.getSelectedRow();
		// System.out.println(row);
		// FundVl fundVl = (FundVl) model.getValueAt(row, 1);
		// System.out.println(fundVl);
	}

	// Popupmenu en la tabla de vls
	private void vlTablaMouseReleased(java.awt.event.MouseEvent evt) {

		if (evt.isPopupTrigger()) {

			vlMenu.show(evt.getComponent(), evt.getX(), evt.getY());

		}

	}

	// Seleccion de una fecha en el calendario desde
	private void desdeDateActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();

		FundDesc fundDesc = null;

		if (node == null) {
			return;
		}
		Object nodeInfo = node.getUserObject();

		if (nodeInfo.getClass() == tfg.app.model.entities.FundDesc.class) {

			fundDesc = (FundDesc) nodeInfo;

			Date input = (Date) model1.getValue();
			LocalDate date1 = input.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

			input = (Date) model2.getValue();
			LocalDate date2 = input.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

			if (date1.compareTo(date2) >= 0) {

				JOptionPane.showMessageDialog(ventanaError,
						"La fecha de inicio no puede ser superior a la fecha final.", "Error de entrada",
						JOptionPane.ERROR_MESSAGE);

				date1 = date2.minusDays(1);

				model1.setDate(date1.getYear(), date1.getMonthValue() - 1, date1.getDayOfMonth());

			}

			if (graficasBox.getSelectedItem().equals("Historial Vl")) {

				chartMaker.createFundVlLineChart(fundService, panelGraficas, descripcionTex, fundDesc, date1, date2);

			}
		}

	}

	// Seleccion de una fecha en el calendario hasta
	private void hastaDateActionPerformed(java.awt.event.ActionEvent evt) {
		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();

		FundDesc fundDesc = null;

		if (node == null) {
			return;
		}
		Object nodeInfo = node.getUserObject();

		if (nodeInfo.getClass() == tfg.app.model.entities.FundDesc.class) {

			fundDesc = (FundDesc) nodeInfo;

			Date input = (Date) model1.getValue();
			LocalDate date1 = input.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

			input = (Date) model2.getValue();
			LocalDate date2 = input.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

			if (date2.compareTo(date1) <= 0) {

				JOptionPane.showMessageDialog(ventanaError,
						"La fecha de inicio no puede ser superior a la fecha final.", "Error de entrada",
						JOptionPane.ERROR_MESSAGE);

				date2 = date1.plusDays(1);
				model2.setDate(date2.getYear(), date2.getMonthValue() - 1, date2.getDayOfMonth());

			}

			if (graficasBox.getSelectedItem().equals("Historial Vl")) {

				chartMaker.createFundVlLineChart(fundService, panelGraficas, descripcionTex, fundDesc, date1, date2);
			}
		}

	}

	// Boton importar fondo del menu de archivo
	private void importarFondoActionPerformed(java.awt.event.ActionEvent evt) {

		selectorDeFichero.setSelectedFile(new File(""));
		int returnVal = selectorDeFichero.showOpenDialog(this);

		if (returnVal == JFileChooser.APPROVE_OPTION) {
			File file = selectorDeFichero.getSelectedFile();

			try {
				FundDesc fundDesc = fundService.importFundDescFromExcel(file);
				fundService.addFund(fundDesc);
			} catch (InputValidationException e) {
				JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error al importar",
						JOptionPane.ERROR_MESSAGE);
			}
			createNodes(top);
			arbolFondosModel.reload(top);
		}

	}

	// Boton exportar a excel del popupmenu de fondo
	private void exportarExcelActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();

		FundDesc fundDesc = null;

		if (node == null) {
			return;
		}
		Object nodeInfo = node.getUserObject();

		if (nodeInfo.getClass() == tfg.app.model.entities.FundDesc.class) {

			fundDesc = (FundDesc) nodeInfo;

			selectorDeFichero.setSelectedFile(new File(fundDesc.getfName() + ".xls"));
			int returnVal = selectorDeFichero.showSaveDialog(this);
			File file = null;
			if (returnVal == JFileChooser.APPROVE_OPTION) {

				file = selectorDeFichero.getSelectedFile();

				if (FilenameUtils.getExtension(file.getName()).equalsIgnoreCase("xls")) {
					// filename is OK as-is
				} else {
					file = new File(file.toString() + ".xls"); // append .xls
					file = new File(file.getParentFile(), FilenameUtils.getBaseName(file.getName()) + ".xls");
				}

				try {
					fundService.exportFundDescToExcel(fundDesc, file);
				} catch (InputValidationException e) {
					JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error al exportar",
							JOptionPane.ERROR_MESSAGE);
				}

			} else {

			}

		}
	}

	// Boton importar vls desde excel del popupmenu de fondo
	private void anadirVlExcelActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();

		FundDesc fundDesc = null;

		if (node == null) {
			return;
		}
		Object nodeInfo = node.getUserObject();

		if (nodeInfo.getClass() == tfg.app.model.entities.FundDesc.class) {

			fundDesc = (FundDesc) nodeInfo;

			selectorDeFichero.setSelectedFile(new File(""));
			int returnVal = selectorDeFichero.showOpenDialog(this);

			if (returnVal == JFileChooser.APPROVE_OPTION) {
				File file = selectorDeFichero.getSelectedFile();

				try {

					List<FundVl> fundVls = fundService.importVlsFromExcel(file, fundDesc, 0, "dd/MM/yyyy");

					for (int x = 0; x < fundVls.size(); x++) {

						try {

							fundService.addFundVl(fundVls.get(x));

						} catch (InputValidationException e) {

							try {
								fundService.updateFundVl(fundVls.get(x));
							} catch (InstanceNotFoundException e1) {
								JOptionPane.showMessageDialog(ventanaError, "Ha ocurrido un error en la BD",
										"Error interno", JOptionPane.ERROR_MESSAGE);
							}
							continue;
						}
					}
				} catch (InputValidationException e) {
					JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de entrada",
							JOptionPane.ERROR_MESSAGE);
				}

				createNodes(top);
				arbolFondosModel.reload(top);

			} else {

			}
		}

	}

	// Seleccionar una grafica en el scroll de la ventana principal
	private void graficasBoxActionPerformed(java.awt.event.ActionEvent evt) {

		DefaultMutableTreeNode node = (DefaultMutableTreeNode) arbolFondos.getLastSelectedPathComponent();

		FundDesc fundDesc = null;
		FundPort fundPort = null;

		if (node == null) {
			return;
		}
		Object nodeInfo = node.getUserObject();

		if (nodeInfo.getClass() == tfg.app.model.entities.FundDesc.class) {

			fundDesc = (FundDesc) nodeInfo;

			if (graficasBox.getSelectedItem().equals("Historial Vl")) {

				desdeDate.setVisible(true);
				hastaDate.setVisible(true);

				desdeLabel.setVisible(true);
				hastaLabel.setVisible(true);

				chartMaker.createFundVlLineChart(fundService, panelGraficas, descripcionTex, fundDesc, null, null);

				if (fundDesc.getFundVls().size() != 0) {

					LocalDate date1 = fundDesc.getFundVls().get(0).getDay();
					LocalDate date2 = fundDesc.getFundVls().get(fundDesc.getFundVls().size() - 1).getDay();

					model1.setDate(date1.getYear(), date1.getMonthValue() - 1, date1.getDayOfMonth());
					model2.setDate(date2.getYear(), date2.getMonthValue() - 1, date2.getDayOfMonth());

				}

			}

			if (graficasBox.getSelectedItem().equals("Descripción")) {

				panelGraficas.removeAll();
				panelGraficas.updateUI();

				desdeDate.setVisible(false);
				hastaDate.setVisible(false);

				desdeLabel.setVisible(false);
				hastaLabel.setVisible(false);

				descripcionTex.setText(
						"Descripción del fondo " + fundDesc.getfName() + " y métricas simples de rendimiento.");
				showFundDesc(fundDesc, panelGraficas);

			}

			if (graficasBox.getSelectedItem().equals("Hist Renta")) {

				// final-inicial/inicial x 100
				desdeDate.setVisible(false);
				hastaDate.setVisible(false);

				desdeLabel.setVisible(false);
				hastaLabel.setVisible(false);

				chartMaker.createFundDescProfitBarChart(fundService, panelGraficas, descripcionTex, fundDesc);

			}

			if (graficasBox.getSelectedItem().equals("Renta Esperada")) {

				// final-inicial/inicial x 100
				desdeDate.setVisible(false);
				hastaDate.setVisible(false);

				desdeLabel.setVisible(false);
				hastaLabel.setVisible(false);

				chartMaker.createEstimateProfitOfFundDescLineChart(fundService, panelGraficas, descripcionTex,
						fundDesc);

			}
		} else {

			if (nodeInfo.getClass() == tfg.app.model.entities.FundPort.class) {

				fundPort = (FundPort) nodeInfo;

				if (graficasBox.getSelectedItem().equals("Distribución")) {

					try {
						chartMaker.createPortfolioDistributionChart(fundService, panelGraficas, descripcionTex,
								fundPort);
					} catch (InstanceNotFoundException e) {
						JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de base de datos",
								JOptionPane.ERROR_MESSAGE);
						return;
					}

				}

				if (graficasBox.getSelectedItem().equals("Fondos Norm")) {

					try {
						chartMaker.createFundDescsOfPortfolioNormalizedLineChart(fundService, panelGraficas,
								descripcionTex, fundPort);
					} catch (InstanceNotFoundException e) {
						JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de base de datos",
								JOptionPane.ERROR_MESSAGE);
						return;
					}
				}

				if (graficasBox.getSelectedItem().equals("Rentabilidad")) {

					try {
						chartMaker.createPortfolioProfitBarChart(fundService, panelGraficas, descripcionTex, fundPort);
					} catch (InstanceNotFoundException e) {
						JOptionPane.showMessageDialog(ventanaError, e.getMessage(), "Error de base de datos",
								JOptionPane.ERROR_MESSAGE);
						return;
					}

				}
			}
		}
	}

	private void showFundDesc(FundDesc fundDesc, JPanel panel) {

		nombreDesc.setText("Nombre: " + fundDesc.getfName());

		isinDesc.setText("ISIN: " + fundDesc.getfId());

		gestoraDesc.setText("Gestora: " + fundDesc.getfGest());

		catDesc.setText("Categoría: " + fundDesc.getfCategory());

		divisaDesc.setText("Divisa: " + fundDesc.getfCurrency());

		apComDesc.setText("Comisión de apertura: " + fundDesc.getfSubComm() * 100 + "%");

		canComDesc.setText("Comisión de cancelación: " + fundDesc.getfCancelComm() * 100 + "%");

		alphaDesc.setText("Alfa: ");

		betaDesc.setText("Beta: ");

		varDesc.setText("Varianza: ");

		int maxRelativo = 0;
		int minRelativo = 0;
		int maxFinal = 0;
		int minFinal = 0;

		for (int x = 0; x < fundDesc.getFundVls().size(); x++) {

			if (fundDesc.getFundVls().get(x).getVl() >= fundDesc.getFundVls().get(maxRelativo).getVl()) {

				maxRelativo = x;
				minRelativo = x;

			} else {
				// mientras
				int y = 0;
				for (y = x; ((y < fundDesc.getFundVls().size()) && (fundDesc.getFundVls().get(maxRelativo)
						.getVl() >= fundDesc.getFundVls().get(y).getVl())); y++) {

					if (fundDesc.getFundVls().get(y).getVl() <= fundDesc.getFundVls().get(minRelativo).getVl()) {

						minRelativo = y;

					}

				}

				if (y != fundDesc.getFundVls().size()) {

					if ((fundDesc.getFundVls().get(maxRelativo).getVl() - fundDesc.getFundVls().get(minRelativo)
							.getVl()) > (fundDesc.getFundVls().get(maxFinal).getVl()
									- fundDesc.getFundVls().get(minFinal).getVl())) {

						maxFinal = maxRelativo;
						minFinal = minRelativo;

					}
				}

				maxRelativo = y;
				minRelativo = y;
				x = y;

			}

		}

		if (maxFinal == 0) {

			drawDesc.setText("Máximo Drawdown: No se ha podido calcular para este fondo.");

		} else {
			drawDesc.setText("Máximo Drawdown: "
					+ ((fundDesc.getFundVls().get(minFinal).getVl() - fundDesc.getFundVls().get(maxFinal).getVl())
							/ fundDesc.getFundVls().get(maxFinal).getVl()) * 100
					+ " entre los días: " + fundDesc.getFundVls().get(maxFinal).getDay() + " y "
					+ fundDesc.getFundVls().get(minFinal).getDay());
		}

		javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
		panel.setLayout(panelLayout);
		panelLayout.setHorizontalGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(panelLayout.createSequentialGroup().addContainerGap()
						.addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(nombreDesc).addComponent(isinDesc).addComponent(gestoraDesc)
								.addComponent(catDesc).addComponent(divisaDesc).addComponent(apComDesc)
								.addComponent(canComDesc).addComponent(alphaDesc).addComponent(betaDesc)
								.addComponent(varDesc).addComponent(drawDesc))
						.addContainerGap(614, Short.MAX_VALUE)));

		panelLayout.setVerticalGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(panelLayout.createSequentialGroup().addContainerGap().addComponent(nombreDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(isinDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(gestoraDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(catDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(divisaDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(apComDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(canComDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(alphaDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(betaDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(varDesc)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(drawDesc)
						.addContainerGap(401, Short.MAX_VALUE)));
	}

	private static void createDbExample() {

		FundDesc fundDesc1 = new FundDesc("DE0008490962", "Renta 4 Bolsa FI", "Pinball Wizards", "Alto riesgo",
				"Monetario", "Euro", 0.01, 0.02);
		FundDesc fundDesc2 = new FundDesc("ES0173394034", "Global Trends, FI", "Pinball Wizards", "Alto riesgo",
				"Monetario", "Euro", 0.01, 0.02);
		FundDesc fundDesc3 = new FundDesc("ES0180792006", "True Value Fi", "Pinball Wizards", "Alto riesgo",
				"Monetario", "Euro", 0.01, 0.02);
		FundDesc fundDesc4 = new FundDesc("ES0168812032", "Patrisa Fi", "Pinball Wizards", "Alto riesgo", "Monetario",
				"Euro", 0.01, 0.02);
		FundDesc fundDesc5 = new FundDesc("ES0167198003", "Ohana Europe Fi", "Pinball Wizards", "Alto riesgo",
				"Monetario", "Euro", 0.01, 0.02);
		FundDesc fundDesc6 = new FundDesc("ES0112231008", "Avantage Fund, Fi", "Pinball Wizards", "Alto riesgo",
				"Monetario", "Euro", 0.01, 0.02);
		FundDesc fundDesc7 = new FundDesc("ES0140963002", "Algar Global Fund Fi", "Pinball Wizards", "Alto riesgo",
				"Monetario", "Euro", 0.01, 0.02);

		FundPort fundPort1 = new FundPort("Cartera Test 1", "Esto es una cartera de prueba");
		FundPort fundPort2 = new FundPort("Cartera Test 2", "Esto es una cartera de prueba");

		LocalDate date = LocalDate.parse("2015-05-30");
		double start = 100.0;

		for (int x = 0; x < 1000; x++) {
			date = date.plusDays(1);
			fundDesc1.getFundVls()
					.add(new FundVl(date, start += ThreadLocalRandom.current().nextDouble(-1, 1), fundDesc1));
			fundDesc3.getFundVls()
					.add(new FundVl(date, start += ThreadLocalRandom.current().nextDouble(-1, 1), fundDesc3));
			fundDesc5.getFundVls()
					.add(new FundVl(date, start += ThreadLocalRandom.current().nextDouble(-1, 1), fundDesc5));
			fundDesc7.getFundVls()
					.add(new FundVl(date, start += ThreadLocalRandom.current().nextDouble(-1, 1), fundDesc7));
		}

		date = LocalDate.parse("2016-05-30");
		start = 70.0;

		for (int x = 0; x < 400; x++) {
			date = date.plusDays(1);
			fundDesc2.getFundVls()
					.add(new FundVl(date, start += ThreadLocalRandom.current().nextDouble(-1, 1), fundDesc2));
			fundDesc4.getFundVls()
					.add(new FundVl(date, start += ThreadLocalRandom.current().nextDouble(-1, 1), fundDesc4));
			fundDesc6.getFundVls()
					.add(new FundVl(date, start += ThreadLocalRandom.current().nextDouble(-1, 1), fundDesc6));
		}

		PortOp portOp = new PortOp(LocalDate.parse("2017-01-28"), fundPort1, fundDesc1, 100);
		PortOp portOp1 = new PortOp(LocalDate.parse("2017-01-28"), fundPort1, fundDesc2, 100);

		PortOp portOp2 = new PortOp(LocalDate.parse("2017-01-28"), fundPort2, fundDesc1, 100);
		PortOp portOp3 = new PortOp(LocalDate.parse("2017-01-28"), fundPort2, fundDesc2, 100);
		PortOp portOp4 = new PortOp(LocalDate.parse("2017-01-28"), fundPort2, fundDesc3, 100);
		PortOp portOp5 = new PortOp(LocalDate.parse("2017-01-28"), fundPort2, fundDesc4, 100);
		PortOp portOp6 = new PortOp(LocalDate.parse("2017-01-28"), fundPort2, fundDesc5, 100);
		PortOp portOp7 = new PortOp(LocalDate.parse("2017-01-28"), fundPort2, fundDesc6, 100);
		PortOp portOp8 = new PortOp(LocalDate.parse("2017-01-28"), fundPort2, fundDesc7, 100);

		try {

			fundService.addFund(fundDesc1);
			fundService.addFund(fundDesc2);
			fundService.addFund(fundDesc3);
			fundService.addFund(fundDesc4);
			fundService.addFund(fundDesc5);
			fundService.addFund(fundDesc6);
			fundService.addFund(fundDesc7);

			fundService.addFundPortfolio(fundPort1);
			fundService.addFundPortfolio(fundPort2);

			fundService.addPortDesc(fundPort1, fundDesc1);
			fundService.addPortDesc(fundPort1, fundDesc2);

			fundService.addPortDesc(fundPort2, fundDesc1);
			fundService.addPortDesc(fundPort2, fundDesc2);
			fundService.addPortDesc(fundPort2, fundDesc3);
			fundService.addPortDesc(fundPort2, fundDesc4);
			fundService.addPortDesc(fundPort2, fundDesc5);
			fundService.addPortDesc(fundPort2, fundDesc6);
			fundService.addPortDesc(fundPort2, fundDesc7);

			fundService.addPortOp(portOp);
			fundService.addPortOp(portOp1);
			fundService.addPortOp(portOp2);
			fundService.addPortOp(portOp3);
			fundService.addPortOp(portOp4);
			fundService.addPortOp(portOp5);
			fundService.addPortOp(portOp6);
			fundService.addPortOp(portOp7);
			fundService.addPortOp(portOp8);

		} catch (InputValidationException e) {
			//
			e.printStackTrace();
		} catch (InstanceNotFoundException e) {
			//
			e.printStackTrace();
		}
	}

	// Main de la app
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		fundService = new FundServiceImpl();
		chartMaker = new ChartMaker();

		// FundDesc fundDesc1 = new FundDesc("DE0008490962", "Renta 4 Bolsa FI",
		// "Pinball Wizards", "Alto riesgo",
		// "Monetario", "Euro", 0.01, 0.02);
		//
		// LocalDate date = LocalDate.parse("2015-05-30");
		// fundDesc1.getFundVls().add(new FundVl(date, 25.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 26.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 27.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 28.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 27.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 25.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 24.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 30.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 29.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 28.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 27.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 0.0, fundDesc1));
		// date = date.plusDays(1);
		// fundDesc1.getFundVls().add(new FundVl(date, 31.0, fundDesc1));
		//
		// FundPort fundPort1 = new FundPort("Cartera Test 1", "Esto es una
		// cartera de prueba");
		//
		// try {
		// fundService.addFund(fundDesc1);
		// fundService.addFundPortfolio(fundPort1);
		// fundService.addPortDesc(fundPort1, fundDesc1);
		// } catch (InputValidationException | InstanceNotFoundException e) {
		// // TODO Auto-generated catch block
		// e.printStackTrace();
		// }

		createDbExample();

		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Gui().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	////////////////////////////////////////////

	private DefaultMutableTreeNode top;
	private DefaultTreeModel arbolFondosModel;
	private static FundService fundService = null;
	private static ChartMaker chartMaker = null;
	private javax.swing.JComboBox<FundDesc> fondoDesplegable;
	private javax.swing.JComboBox<FundDesc> fondoDesplegable1;
	private javax.swing.JComboBox<FundDesc> fondoDesplegable2;
	private javax.swing.JComboBox<FundDesc> selFondoDespl;

	////////////////////////////////////////////

	private javax.swing.JButton aceptAnFondoCartBoton;
	private javax.swing.JButton aceptBoFondoCartBoton;
	private javax.swing.JButton aceptarConfirBoton;
	private javax.swing.JMenuItem actuOp;
	private javax.swing.JMenuItem actuVl;
	private javax.swing.JDialog actuaCartera;
	private javax.swing.JDialog actuaFondo;
	private javax.swing.JButton actuaFondoBoton1;
	private javax.swing.JDialog actuaOp;
	private javax.swing.JDialog actuaVl;
	private javax.swing.JMenuItem actualizarCartera;
	private javax.swing.JMenuItem actualizarFondo;
	private javax.swing.JMenuItem anFondoAcartera;
	private javax.swing.JMenuItem anOperacion;
	private javax.swing.JButton anaCarteraBoton;
	private javax.swing.JButton anaCarteraBoton1;
	private javax.swing.JButton anadFondoBoton;
	private javax.swing.JMenuItem anadVlaFondo;
	private javax.swing.JDialog anadirCartera;
	private javax.swing.JDialog anadirFondo;
	private javax.swing.JDialog anadirFondoCartera;
	private javax.swing.JDialog anadirOp;
	private javax.swing.JDialog anadirVl;
	private javax.swing.JLabel apComLabel;
	private javax.swing.JLabel apComLabel1;
	private javax.swing.JFormattedTextField apComText;
	private javax.swing.JFormattedTextField apComText1;
	private javax.swing.JTree arbolFondos;
	private javax.swing.JMenuBar barraMenu;
	private javax.swing.JMenuItem borrarCartera;
	private javax.swing.JMenuItem borrarFondo;
	private javax.swing.JDialog borrarFondoCartera;
	private javax.swing.JMenuItem borrarOp;
	private javax.swing.JMenuItem borrarVl;
	private javax.swing.JMenuItem botonAnadirCartera;
	private javax.swing.JMenuItem botonAnadirFondo;
	private javax.swing.JLabel buscarLabel;
	private javax.swing.JTextField buscarText;
	private javax.swing.JButton canActuaFondoBoton1;
	private javax.swing.JButton canAnFondoCartBoton;
	private javax.swing.JButton canAnaCarteraBoton;
	private javax.swing.JButton canAnaCarteraBoton1;
	private javax.swing.JButton canAnaFondoBoton;
	private javax.swing.JButton canBoFondoCartBoton;
	private javax.swing.JLabel cancelComLabel;
	private javax.swing.JLabel cancelComLabel1;
	private javax.swing.JFormattedTextField cancelComText;
	private javax.swing.JFormattedTextField cancelComText1;
	private javax.swing.JButton cancelarConfirBoton;
	private javax.swing.JLabel carteraLabel;
	private javax.swing.JLabel carteraLabel1;
	private javax.swing.JPopupMenu carteraMenu;
	private javax.swing.JLabel categoriaLabel;
	private javax.swing.JLabel categoriaLabel1;
	private javax.swing.JTextField categoriaText;
	private javax.swing.JTextField categoriaText1;
	private javax.swing.JLabel confirmacionLabel;
	private javax.swing.JLabel descCarteraLabel;
	private javax.swing.JLabel descCarteraLabel1;
	private javax.swing.JTextArea descCarteraText;
	private javax.swing.JTextArea descCarteraText1;
	private javax.swing.JLabel divisaLabel;
	private javax.swing.JLabel divisaLabel1;
	private javax.swing.JTextField divisaText;
	private javax.swing.JTextField divisaText1;
	private javax.swing.JMenuItem elFondoCartera;
	private javax.swing.JLabel fondoLabel;
	private javax.swing.JLabel fondoLabel1;
	private javax.swing.JPopupMenu fondoMenu;
	private javax.swing.JMenuItem anadirVlExcel;
	private javax.swing.JLabel gestoraLabel;
	private javax.swing.JLabel gestoraLabel1;
	private javax.swing.JTextField gestoraText;
	private javax.swing.JTextField gestoraText1;
	private javax.swing.JLabel isinLabel;
	private javax.swing.JLabel isinLabel1;
	private javax.swing.JTextField isinText;
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenu jMenu3;
	private javax.swing.JMenu jMenu4;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JScrollPane jScrollPane4;
	private javax.swing.JScrollPane jScrollPane5;
	private javax.swing.JLabel nomCarteraLabel;
	private javax.swing.JLabel nomCarteraLabel1;
	private javax.swing.JTextField nomCarteraText;
	private javax.swing.JTextField nomCarteraText1;
	private javax.swing.JButton opAccBoton;
	private javax.swing.JButton opAccBoton1;
	private javax.swing.JButton opCancBoton;
	private javax.swing.JButton opCancBoton1;
	private javax.swing.JLabel opCarteraLabel;
	private javax.swing.JLabel opCarteraLabel1;
	private javax.swing.JLabel opFechaLabel;
	private javax.swing.JLabel opFechaLabel1;
	private javax.swing.JSpinner opFechaText;
	private javax.swing.JLabel opIsinLabel1;
	private javax.swing.JLabel opIsinLabel;
	private javax.swing.JPopupMenu opMenu;
	private javax.swing.JLabel opOperacionLabel;
	private javax.swing.JLabel opOperacionLabel1;
	private javax.swing.JFormattedTextField opOperacionText;
	private javax.swing.JFormattedTextField opOperacionText1;
	private javax.swing.JTable opTabla;
	private javax.swing.JButton selFondoAcBoton;
	private javax.swing.JButton selFondoCanBoton;
	private javax.swing.JLabel selFondoLabel;
	private javax.swing.JDialog tablaOps;
	private javax.swing.JDialog tablaVls;
	private javax.swing.JLabel tipoLabel;
	private javax.swing.JLabel tipoLabel1;
	private javax.swing.JTextField tipoText;
	private javax.swing.JTextField tipoText1;
	private javax.swing.JDialog ventanaConfirmacion;
	private javax.swing.JOptionPane ventanaError;
	private javax.swing.JDialog verOp;
	private javax.swing.JMenuItem verOperaciones;
	private javax.swing.JButton vlAccBoton;
	private javax.swing.JButton vlAccBoton1;
	private javax.swing.JButton vlCancBoton;
	private javax.swing.JButton vlCancBoton1;
	private javax.swing.JLabel vlFechaLabel;
	private javax.swing.JLabel vlFechaLabel1;
	private javax.swing.JSpinner vlFechaText;
	private javax.swing.JLabel vlIsinIdLabel;
	private javax.swing.JLabel vlIsinLabel;
	private javax.swing.JLabel vlIsinLabel1;
	private javax.swing.JPopupMenu vlMenu;
	private javax.swing.JTable vlTabla;
	private javax.swing.JLabel vlVlLabel;
	private javax.swing.JLabel vlVlLabel1;
	private javax.swing.JFormattedTextField vlVlText;
	private javax.swing.JFormattedTextField vlVlText1;
	private javax.swing.JMenuItem verVl;
	private javax.swing.JPanel panelGraficas;
	private javax.swing.JComboBox<String> graficasBox;
	private javax.swing.JLabel nombreLabel;
	private javax.swing.JTextField nombreText;
	private javax.swing.JRadioButton ventaBoton;
	private javax.swing.JRadioButton compraBoton;
	private javax.swing.ButtonGroup buttonGroup1;
	private javax.swing.JLabel nombreDesc;
	private javax.swing.JLabel isinDesc;
	private javax.swing.JLabel gestoraDesc;
	private javax.swing.JLabel catDesc;
	private javax.swing.JLabel divisaDesc;
	private javax.swing.JLabel apComDesc;
	private javax.swing.JLabel canComDesc;
	private javax.swing.JLabel alphaDesc;
	private javax.swing.JLabel betaDesc;
	private javax.swing.JLabel varDesc;
	private javax.swing.JLabel drawDesc;
	private javax.swing.JScrollPane jScrollPane6;
	private javax.swing.JEditorPane descripcionTex;
	private JDatePickerImpl desdeDate;
	private JDatePickerImpl hastaDate;
	private javax.swing.JLabel desdeLabel;
	private javax.swing.JLabel hastaLabel;
	private javax.swing.JFileChooser selectorDeFichero;
	private javax.swing.JMenuItem exportarExcel;
	private UtilDateModel model1;
	private UtilDateModel model2;
	private javax.swing.JMenuItem importarFondo;
	// End of variables declaration
}